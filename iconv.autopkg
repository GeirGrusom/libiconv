nuget {
	nuspec {
		id = libiconv;
		version: 1.14;
		title: Iconv;
		authors: Bruno Haible;
		owners: Bruno Haible;
		licenseUrl: @"http://www.gnu.org/copyleft/lesser.html";
		projectUrl: @"http://savannah.gnu.org/projects/libiconv/";
		iconUrl: @"http://savannah.gnu.org/images/Savannah.theme/contexts/main.orig.png";
		requireLicenseAcceptance:false;
		summary: "GNU libiconv provides an implementation of the iconv() function and the iconv program for character set conversion. For use on systems which don't have one, or whose implementation cannot convert from/to Unicode. ";
		description: @"For historical reasons, international text is often encoded using a language or country dependent character encoding. With the advent of the internet and the frequent exchange of text across countries - even the viewing of a web page from a foreign country is a text exchange in this context -, conversions between these encodings have become important. They have also become a problem, because many characters which are present in one encoding are absent in many other encodings. To solve this mess, the Unicode encoding has been created. It is a super-encoding of all others and is therefore the default encoding for new text formats like XML.";
		releaseNotes: @"Updated translations";
		copyright: @"Copyright (C) 1998, 2010 Free Software Foundation, Inc.";
		tags: { libiconv, iconv, native, cpp };
	}
	
	files {
		
		// Grab all the files in the include folder.
		// the folder that contains all the .h files will
		// automatically get added to the Includes path.
		include: { 
			"include\iconv.h"
		};
		
		// Documents that we want to ship with the package
		// docs: { c:\test\docs\license.rtf };
		
		// These declarations of lib, symbols and bin folders only apply to the project when
		//	$(Platform) == x86
		//	$(PlatformToolset) == v100
		//	$(Configuration) == Release
		[x86,v120,debug] {
		
			// Files in the lib collection are automatically added to the AdditionalLibraries in the link stage.
			lib: "COPKG\libiconv\Debug\libiconv.lib";
			
			// Files in the symbols collection are added to the symbols package.
			symbols: "COPKG\libiconv\Debug\libiconv.pdb";
			
			// Files in the bin directory are put in the redist package and copied to the output folder at build time.
			bin: "COPKG\libiconv\Debug\libiconv.dll";
			
		}
		
		[x86,v120,release] {
		
			// Files in the lib collection are automatically added to the AdditionalLibraries in the link stage.
			lib: "COPKG\libiconv\Release\libiconv.lib";
			
			// Files in the symbols collection are added to the symbols package.
			symbols: "COPKG\libiconv\Release\libiconv.pdb";
			
			// Files in the bin directory are put in the redist package and copied to the output folder at build time.
			bin: "COPKG\libiconv\Release\libiconv.dll";
			
		}
		
		[x64,v120,debug] {
		
			// Files in the lib collection are automatically added to the AdditionalLibraries in the link stage.
			lib: "COPKG\libiconv\x64\Debug\libiconv.lib";
			
			// Files in the symbols collection are added to the symbols package.
			symbols: "COPKG\libiconv\x64\Debug\libiconv.pdb";
			
			// Files in the bin directory are put in the redist package and copied to the output folder at build time.
			bin: "COPKG\libiconv\x64\Debug\libiconv.dll";
			
		}
		
		[x64,v120,release] {
		
			// Files in the lib collection are automatically added to the AdditionalLibraries in the link stage.
			lib: "COPKG\libiconv\x64\Release\libiconv.lib";
			
			// Files in the symbols collection are added to the symbols package.
			symbols: "COPKG\libiconv\x64\Release\libiconv.pdb";
			
			// Files in the bin directory are put in the redist package and copied to the output folder at build time.
			bin: "COPKG\libiconv\x64\Release\libiconv.dll";
			
		}
	}
}